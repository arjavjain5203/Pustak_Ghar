{"ast":null,"code":"var _jsxFileName = \"/Users/anshikatripathi/Desktop/women_safety/Pustak_Ghar/src/components/SearchBranch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Branches from \"./Branches\"; // Import your data here\nimport \"./SearchBook.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Branch = () => {\n  _s();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const university = queryParams.get(\"university\");\n  const course = queryParams.get(\"course\");\n  const navigate = useNavigate();\n  const [branch, setBranch] = useState(\"\");\n  const [year, setYear] = useState(\"\"); // Changed to 'year'\n  const [availableBranches, setAvailableBranches] = useState([]);\n  const [availableYears, setAvailableYears] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (university && course) {\n      // Find course data\n      const courseData = Branches.courses.find(c => c.courseName === course);\n      if (courseData) {\n        // Set branches and years based on the selected course\n        setAvailableBranches(courseData.branches.map(branch => branch.branchName));\n      } else {\n        setError(\"This course is not available.\");\n      }\n    } else {\n      setError(\"University or course is missing.\");\n    }\n  }, [university, course]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (branch && year) {\n      navigate(`/subjects?university=${university}&course=${course}&branch=${branch}&year=${year}`);\n    } else {\n      setError(\"Please select both branch and year.\");\n    }\n  };\n  const handleBranchChange = e => {\n    const selectedBranch = e.target.value;\n    setBranch(selectedBranch);\n    const courseData = Branches.courses.find(c => c.courseName === course);\n    if (courseData) {\n      const branchData = courseData.branches.find(b => b.branchName === selectedBranch);\n      if (branchData) {\n        setAvailableYears(branchData.years.map(year => year.year));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mb-4 text-danger\",\n            children: \"PUSTAK GHAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 23\n          }, this), !error && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"form-inline justify-content-center flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mx-2 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                value: branch,\n                onChange: handleBranchChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Branch\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this), availableBranches.length > 0 ? availableBranches.map((branchOption, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: branchOption,\n                  children: branchOption\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"No branches available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group mx-2 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                value: year,\n                onChange: e => setYear(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this), availableYears.length > 0 ? availableYears.map((yearOption, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: yearOption,\n                  children: yearOption\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"No years available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-danger mx-2\",\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Branch, \"Cp4hV0oO3Tkwfe7xWPJ7YWQ/8J0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Branch;\nexport default Branch;\nvar _c;\n$RefreshReg$(_c, \"Branch\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Branches","jsxDEV","_jsxDEV","Branch","_s","location","queryParams","URLSearchParams","search","university","get","course","navigate","branch","setBranch","year","setYear","availableBranches","setAvailableBranches","availableYears","setAvailableYears","error","setError","courseData","courses","find","c","courseName","branches","map","branchName","handleSubmit","event","preventDefault","handleBranchChange","e","selectedBranch","target","value","branchData","b","years","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","length","branchOption","index","yearOption","type","_c","$RefreshReg$"],"sources":["/Users/anshikatripathi/Desktop/women_safety/Pustak_Ghar/src/components/SearchBranch.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Branches from \"./Branches\"; // Import your data here\nimport \"./SearchBook.css\";\n\nconst Branch = () => {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const university = queryParams.get(\"university\");\n  const course = queryParams.get(\"course\");\n  const navigate = useNavigate();\n\n  const [branch, setBranch] = useState(\"\");\n  const [year, setYear] = useState(\"\"); // Changed to 'year'\n  const [availableBranches, setAvailableBranches] = useState([]);\n  const [availableYears, setAvailableYears] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (university && course) {\n      // Find course data\n      const courseData = Branches.courses.find((c) => c.courseName === course);\n\n      if (courseData) {\n        // Set branches and years based on the selected course\n        setAvailableBranches(courseData.branches.map(branch => branch.branchName));\n      } else {\n        setError(\"This course is not available.\");\n      }\n    } else {\n      setError(\"University or course is missing.\");\n    }\n  }, [university, course]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (branch && year) {\n      navigate(\n        `/subjects?university=${university}&course=${course}&branch=${branch}&year=${year}`\n      );\n    } else {\n      setError(\"Please select both branch and year.\");\n    }\n  };\n\n  const handleBranchChange = (e) => {\n    const selectedBranch = e.target.value;\n    setBranch(selectedBranch);\n\n    const courseData = Branches.courses.find(c => c.courseName === course);\n    if (courseData) {\n      const branchData = courseData.branches.find(b => b.branchName === selectedBranch);\n      if (branchData) {\n        setAvailableYears(branchData.years.map(year => year.year));\n      }\n    }\n  };\n\n  return (\n    <div className=\"hero\">\n      <div className=\"container py-5\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-8 text-center\">\n            <h2 className=\"mb-4 text-danger\">PUSTAK GHAR</h2>\n            {error && <p className=\"text-danger\">{error}</p>}\n            {!error && (\n              <form\n                onSubmit={handleSubmit}\n                className=\"form-inline justify-content-center flex-column\"\n              >\n                <div className=\"form-group mx-2 mb-3\">\n                  <select\n                    className=\"form-control\"\n                    value={branch}\n                    onChange={handleBranchChange}\n                  >\n                    <option value=\"\">Select Branch</option>\n                    {availableBranches.length > 0 ? (\n                      availableBranches.map((branchOption, index) => (\n                        <option key={index} value={branchOption}>\n                          {branchOption}\n                        </option>\n                      ))\n                    ) : (\n                      <option value=\"\">No branches available</option>\n                    )}\n                  </select>\n                </div>\n                <div className=\"form-group mx-2 mb-3\">\n                  <select\n                    className=\"form-control\"\n                    value={year}\n                    onChange={(e) => setYear(e.target.value)}\n                  >\n                    <option value=\"\">Select Year</option>\n                    {availableYears.length > 0 ? (\n                      availableYears.map((yearOption, index) => (\n                        <option key={index} value={yearOption}>\n                          {yearOption}\n                        </option>\n                      ))\n                    ) : (\n                      <option value=\"\">No years available</option>\n                    )}\n                  </select>\n                </div>\n                <div className=\"mt-3\">\n                  <button type=\"submit\" className=\"btn btn-danger mx-2\">\n                    Search\n                  </button>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Branch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}